{"version":3,"file":"cba.js","mappings":"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","sources":["webpack://@homiehomes/cba/webpack/bootstrap","webpack://@homiehomes/cba/webpack/runtime/define property getters","webpack://@homiehomes/cba/webpack/runtime/hasOwnProperty shorthand","webpack://@homiehomes/cba/webpack/runtime/make namespace object","webpack://@homiehomes/cba/./src/js/_cba.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*!\n * cba.js â€“ Checkbox All Utility\n * Version: 1.0.6\n * Author: Homero Cavazos\n * GitHub: https://github.com/homiehomes\n * License: MIT\n * Website: https://homiehomes.dev\n *\n * Description:\n * A lightweight JavaScript helper for managing checkbox groups. \n * Allows a single \"All\" checkbox to toggle the state of all other \n * checkboxes within a specified fieldset.\n *\n * Usage:\n *\n *   // HTML\n *\n *   <input name=\"group1[]\" value=\"All\" type=\"checkbox\"> All\n *   <input name=\"group1[]\" value=\"Option 1\" type=\"checkbox\"> Option 1\n *   <input name=\"group1[]\" value=\"Option 2\" type=\"checkbox\"> Option 2\n * \n *   // Explicit per fieldset\n *   new cba('type');\n *   new cba('labor-type');\n *   \n *   // Auto-detect all groups\n *   cba.initAll();\n *\n *   // Initialize with custom options\n *   new cba('type', { debug: true });\n *\n *   // Event Listeners\n *.  // When all are checked\n *   document.querySelector('input[name=\"group1[]\"][value=\"all\"]')\n *       .addEventListener('cba:allChecked', (e) => {\n *           console.log('All checked for:', e.detail.fieldset);\n *       });\n *\n *   // When count of checked changes\n *   document.querySelector('input[name=\"group1[]\"]')\n *       .addEventListener('cba:countChecked', (e) => {\n *           console.log('Count checked for:', e.detail.checkedCount);\n *       });\n * \n * Notes:\n * - Expects a checkbox with value=\"All\" in each group.\n * - Other checkboxes must share the same name with [] notation.\n */\n\n\"use strict\";\n\nclass cba {\n  constructor(fieldset, opts = {}) {\n    if (!fieldset) {\n      throw new Error(\"cba: You must provide a fieldset name.\");\n    }\n\n\n    // Settings\n    this.settings = Object.assign(\n      {\n        debug: false,\n        fieldset: fieldset,\n        selectAllValue: 'all',\n      },\n      opts\n    );\n\n    // Select checkboxes\n    this.masterCheckbox = document.querySelector(\n      `input[name=\"${this.settings.fieldset}[]\"][value=\"${this.settings.selectAllValue}\"]`\n    );\n    this.allCheckboxes = document.querySelectorAll(\n      `input[name=\"${this.settings.fieldset}[]\"]:not([value=\"${this.settings.selectAllValue}\"])`\n    );\n\n    if (!this.masterCheckbox) {\n      if (this.settings.debug) {\n        console.warn(`cba: No \"All\" checkbox found for fieldset \"${fieldset}\".`);\n      }\n      return;\n    }\n\n\n    // Event Listeners\n    this.allCheckedEvent = new CustomEvent('cba:allChecked', {\n      detail: {\n        fieldset: this.settings.fieldset,\n        checkboxes: this.allCheckboxes,\n        count: this.allCheckboxes.length,\n        values: [...this.allCheckboxes].map(cb => cb.value) || []\n      }\n    });\n    // Note: countCheckedEvent is now created dynamically in updateAllCheckboxes with the current count\n\n    // Auto-init\n    this.init();\n  }\n\n  setOpts(opts = {}) {\n    Object.assign(this.settings, opts);\n  }\n\n\n  areAllCheckboxesChecked() {\n    return [...this.allCheckboxes].every(cb => cb.checked);\n  }\n\n  toggleAllCheckboxes(checked) {\n    this.allCheckboxes.forEach(cb => (cb.checked = checked));\n\n    if (this.areAllCheckboxesChecked()) {\n      this.masterCheckbox.dispatchEvent(this.allCheckedEvent);\n    } else {\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent('cba:countChecked', {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: 0,\n            values: []\n          }\n        })\n      );\n    }\n  }\n\n  updateAllCheckboxes() {\n    const checkedCount = [...this.allCheckboxes].filter(cb => cb.checked).length;\n    const checkedValue = [...this.allCheckboxes].filter(cb => cb.checked);\n    const totalCount = this.allCheckboxes.length;\n\n    if (checkedCount === 0) {\n      this.masterCheckbox.checked = false;\n      this.masterCheckbox.indeterminate = false;\n      this.masterCheckbox.classList.remove(\"indeterminate\");\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent('cba:countChecked', {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: 0,\n            values: []\n          }\n        })\n      );\n    } else if (checkedCount === totalCount) {\n      this.masterCheckbox.checked = true;\n      this.masterCheckbox.indeterminate = false;\n      this.masterCheckbox.classList.remove(\"indeterminate\");\n      // Dispatch custom event when all are checked\n      this.masterCheckbox.dispatchEvent(this.allCheckedEvent);\n    } else {\n      this.masterCheckbox.checked = false;\n      this.masterCheckbox.indeterminate = true;\n      this.masterCheckbox.classList.add(\"indeterminate\");\n      // Dispatch custom event with current checked count\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent('cba:countChecked', {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: checkedCount,\n            values: checkedValue.map(cb => cb.value)\n          }\n        })\n      );\n    }\n  }\n\n  init() {\n    if (this.settings.debug) {\n      console.log(`cba: Initialized for fieldset \"${this.settings.fieldset}\".`);\n    }\n    // Master checkbox toggles group\n    this.masterCheckbox.addEventListener(\"change\", () => {\n      this.toggleAllCheckboxes(this.masterCheckbox.checked);\n    });\n\n    // Group checkboxes update master state\n    this.allCheckboxes.forEach(cb => {\n      cb.addEventListener(\"change\", () => this.updateAllCheckboxes());\n    });\n\n    // Initialize correct state\n    this.updateAllCheckboxes();\n  }\n\n  // ðŸ”¹ Auto-detect method\n  static initAll(opts = {}) {\n    document.querySelectorAll(`input[value=\"${opts.select || 'All'}\"]`).forEach(master => {\n      const fieldsetName = master.getAttribute(\"name\").replace(\"[]\", \"\");\n      new cba(fieldsetName, opts);\n    });\n  }\n}\n\n\n// Attach to window for UMD/global usage\nif (typeof window !== 'undefined') {\n  window.cba = cba;\n}\n\nexport { cba };\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","name","Array","from","test","isArray","length","e","n","_classCallCheck","_defineProperties","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","String","Number","cba","fieldset","opts","arguments","undefined","Error","settings","assign","debug","selectAllValue","masterCheckbox","document","querySelector","concat","allCheckboxes","querySelectorAll","console","warn","allCheckedEvent","CustomEvent","detail","checkboxes","count","values","map","cb","value","init","setOpts","areAllCheckboxesChecked","every","checked","toggleAllCheckboxes","forEach","dispatchEvent","updateAllCheckboxes","checkedCount","filter","checkedValue","totalCount","indeterminate","classList","remove","add","_this","log","addEventListener","initAll","select","master","fieldsetName","getAttribute","replace","window"],"sourceRoot":""}