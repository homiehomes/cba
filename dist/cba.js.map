{"version":3,"file":"cba.js","mappings":"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","sources":["webpack://@homiehomes/cba/webpack/bootstrap","webpack://@homiehomes/cba/webpack/runtime/define property getters","webpack://@homiehomes/cba/webpack/runtime/hasOwnProperty shorthand","webpack://@homiehomes/cba/webpack/runtime/make namespace object","webpack://@homiehomes/cba/./src/js/_cba.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*!\n * cba.js – Checkbox All Utility\n * Version: 1.0.8\n * Author: Homero Cavazos\n * GitHub: https://github.com/homiehomes\n * License: MIT\n * Website: https://homiehomes.dev\n *\n * Description:\n * A lightweight JavaScript helper for managing checkbox groups.\n * Allows a single \"All\" checkbox to toggle the state of all other\n * checkboxes within a specified fieldset.\n *\n * Usage:\n *\n *   // HTML\n *\n *   <input name=\"group1[]\" value=\"All\" type=\"checkbox\"> All\n *   <input name=\"group1[]\" value=\"Option 1\" type=\"checkbox\"> Option 1\n *   <input name=\"group1[]\" value=\"Option 2\" type=\"checkbox\"> Option 2\n *\n *   // Explicit per fieldset\n *   new cba('type');\n *   new cba('labor-type');\n *\n *   // Auto-detect all groups\n *   cba.initAll();\n *\n *   // Initialize with custom options\n *   new cba('type', { debug: true });\n *\n *   // Event Listeners\n *.  // When all are checked\n *   document.querySelector('input[name=\"group1[]\"][value=\"all\"]')\n *       .addEventListener('cba:allChecked', (e) => {\n *           console.log('All checked for:', e.detail.fieldset);\n *       });\n *\n *   // When count of checked changes\n *   document.querySelector('input[name=\"group1[]\"]')\n *       .addEventListener('cba:checkedDetails', (e) => {\n *           console.log('Count checked for:', e.detail.checkedCount);\n *       });\n *\n * Notes:\n * - Expects a checkbox with value=\"All\" in each group.\n * - Other checkboxes must share the same name with [] notation.\n */\n\n\"use strict\";\n\nclass cba {\n  constructor(fieldset, opts = {}) {\n    if (!fieldset) {\n      throw new Error(\"cba: You must provide a fieldset name.\");\n    }\n\n    // Settings\n    this.settings = Object.assign(\n      {\n        debug: false,\n        fieldset: fieldset,\n        selectAllValue: \"all\",\n        associatedLabels: false,\n      },\n      opts\n    );\n\n    // Select checkboxes\n    this.masterCheckbox = document.querySelector(\n      `input[name=\"${this.settings.fieldset}[]\"][value=\"${this.settings.selectAllValue}\"]`\n    );\n    this.allCheckboxes = document.querySelectorAll(\n      `input[name=\"${this.settings.fieldset}[]\"]:not([value=\"${this.settings.selectAllValue}\"])`\n    );\n\n    const allLabels =\n      this.settings.associatedLabels === true ? this.getLabels() : undefined;\n\n    if (!this.masterCheckbox) {\n      if (this.settings.debug) {\n        console.warn(\n          `cba: No \"All\" checkbox found for fieldset \"${fieldset}\".`\n        );\n      }\n      return;\n    }\n\n    // Event Listeners\n    this.allCheckedEvent = new CustomEvent(\"cba:allChecked\", {\n      detail: {\n        fieldset: this.settings.fieldset,\n        checkboxes: this.allCheckboxes,\n        count: this.allCheckboxes.length,\n        values: [...this.allCheckboxes].map((cb) => cb.value) || [],\n        ...(this.settings.associatedLabels === true\n          ? { labels: allLabels }\n          : {}),\n      },\n    });\n    // Note: countCheckedEvent is now created dynamically in updateAllCheckboxes with the current count\n\n    // Auto-init\n    this.init();\n  }\n\n  setOpts(opts = {}) {\n    Object.assign(this.settings, opts);\n  }\n\n  getLabels() {\n    return Array.from(this.allCheckboxes).map((cb) => {\n      const parent = cb.parentElement;\n      if (parent.tagName.toLowerCase() === \"label\") {\n        return parent.textContent.trim();\n      } else {\n        const label = document.querySelector(`label[for=\"${cb.id}\"]`);\n        return label ? label.textContent.trim() : \"\";\n      }\n    });\n  }\n  areAllCheckboxesChecked() {\n    return [...this.allCheckboxes].every((cb) => cb.checked);\n  }\n\n  toggleAllCheckboxes(checked) {\n    this.allCheckboxes.forEach((cb) => (cb.checked = checked));\n\n    if (this.areAllCheckboxesChecked()) {\n      this.masterCheckbox.dispatchEvent(this.allCheckedEvent);\n    } else {\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent(\"cba:checkedDetails\", {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: 0,\n            values: [],\n            labels: [],\n          },\n        })\n      );\n    }\n  }\n\n  updateAllCheckboxes() {\n    const checked = Array.from(this.allCheckboxes).filter((cb) => cb.checked);\n    const checkedCount = checked.length;\n    const checkedValues = checked.map((cb) => cb.value);\n    const totalCount = this.allCheckboxes.length;\n\n    let checkedLabels;\n\n    if (this.settings.associatedLabels === true) {\n      checkedLabels = this.getLabels();\n    }\n\n    if (checkedCount === 0) {\n      this.masterCheckbox.checked = false;\n      this.masterCheckbox.indeterminate = false;\n      this.masterCheckbox.classList.remove(\"indeterminate\");\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent(\"cba:checkedDetails\", {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: 0,\n            values: [],\n            ...(this.settings.associatedLabels === true ? { labels: [] } : {}),\n          },\n        })\n      );\n    } else if (checkedCount === totalCount) {\n      this.masterCheckbox.checked = true;\n      this.masterCheckbox.indeterminate = false;\n      this.masterCheckbox.classList.remove(\"indeterminate\");\n      // Dispatch custom event when all are checked\n      this.masterCheckbox.dispatchEvent(this.allCheckedEvent);\n    } else {\n      this.masterCheckbox.checked = false;\n      this.masterCheckbox.indeterminate = true;\n      this.masterCheckbox.classList.add(\"indeterminate\");\n      // Dispatch custom event with current checked count\n      this.masterCheckbox.dispatchEvent(\n        new CustomEvent(\"cba:checkedDetails\", {\n          detail: {\n            fieldset: this.settings.fieldset,\n            count: checkedCount,\n            values: checkedValues,\n            ...(this.settings.associatedLabels === true\n              ? { labels: checkedLabels }\n              : {}),\n          },\n        })\n      );\n    }\n  }\n\n  init() {\n    if (this.settings.debug) {\n      console.log(`cba: Initialized for fieldset \"${this.settings.fieldset}\".`);\n    }\n    // Master checkbox toggles group\n    this.masterCheckbox.addEventListener(\"change\", () => {\n      this.toggleAllCheckboxes(this.masterCheckbox.checked);\n    });\n\n    // Group checkboxes update master state\n    this.allCheckboxes.forEach((cb) => {\n      cb.addEventListener(\"change\", () => this.updateAllCheckboxes());\n    });\n\n    // Initialize correct state\n    this.updateAllCheckboxes();\n  }\n\n  // 🔹 Auto-detect method\n  static initAll(opts = {}) {\n    document\n      .querySelectorAll(`input[value=\"${opts.select || \"All\"}\"]`)\n      .forEach((master) => {\n        const fieldsetName = master.getAttribute(\"name\").replace(\"[]\", \"\");\n        new cba(fieldsetName, opts);\n      });\n  }\n}\n\n// Attach to window for UMD/global usage\nif (typeof window !== \"undefined\") {\n  window.cba = cba;\n}\n\nexport { cba };\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","name","Array","from","test","isArray","length","e","n","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_classCallCheck","_defineProperties","key","_createClass","i","_toPrimitive","toPrimitive","String","Number","cba","fieldset","opts","undefined","Error","settings","assign","debug","selectAllValue","associatedLabels","masterCheckbox","document","querySelector","concat","allCheckboxes","querySelectorAll","allLabels","getLabels","console","warn","allCheckedEvent","CustomEvent","detail","checkboxes","count","values","map","cb","labels","init","setOpts","parent","parentElement","tagName","toLowerCase","textContent","trim","label","id","areAllCheckboxesChecked","every","checked","toggleAllCheckboxes","dispatchEvent","updateAllCheckboxes","checkedCount","checkedValues","totalCount","checkedLabels","indeterminate","classList","remove","add","_this","log","addEventListener","initAll","select","master","fieldsetName","getAttribute","replace","window"],"sourceRoot":""}